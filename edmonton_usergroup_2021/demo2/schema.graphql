schema {
  query: Query
}

type Query {
  character(id: ID!): Character
  movies: [Movie!]
}

"The multiplier path scalar represents a valid GraphQL multiplier path string."
scalar MultiplierPath

type Movie {
  characters: [Character!]
  director: String!
  id: ID!
  openingCrawl: String!
  producer: String!
  releaseDate: Date!
  title: String!
}

type Character {
  eyeColor: String!
  gender: String!
  hairColor: String!
  height: Int!
  mass: Int!
  movies: [Movie!]
  name: String!
}

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

"The cost directives is used to express the complexity of a field."
directive @cost("Defines the complexity of the field." complexity: Int! = 1 "Defines field arguments that act as complexity multipliers." multipliers: [MultiplierPath!]) on FIELD_DEFINITION

directive @authorize("The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access to the annotated resource." roles: [String!]) repeatable on OBJECT | FIELD_DEFINITION